import yaml
from yaml.loader import SafeLoader
import datetime
import pandas as pd
import requests
from dotenv import load_dotenv
import os
import streamlit as st
import streamlit_authenticator as stauth
load_dotenv()


# –ß–∏—Ç–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
url = os.getenv('URL')
headers = {'Content-Type': 'application/json'}

st.set_page_config(
    page_title="–ù–µ–ù–°–ò", page_icon="üîç",  layout="wide"
)

def request_(text):
    response = requests.post(
        url, json=dict(text=f'{text}')
        )
    return response


# --- USER AUTHENTICTION ---

with open('config.yaml') as file:
    config = yaml.load(file, Loader=SafeLoader)

authenticator = stauth.Authenticate(
    config['credentials'],
    config['cookie']['name'],
    config['cookie']['key'],
    config['cookie']['expiry_days'],
    config['preauthorized']
)

authenticator.login('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ù–µ–ù–°–ò', 'main')

if st.session_state["authentication_status"]:
    authenticator.logout('–í—ã–π—Ç–∏ –∏–∑ –ù–µ–ù–°–ò', 'main', key='unique_key')

    # --- –õ–æ–≥ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–π --- 
    loginlog_username = st.session_state["username"]
    loginlog_time = datetime.datetime.now()
    formatted_time = loginlog_time.strftime("%d-%m-%Y %H:%M:%S")
    with open('login_log.txt', 'a') as file:
        file.write(f"Username: {loginlog_username} has loggined at {formatted_time}\n")
    
    # --- –ó–∞–≥–æ–ª–æ–≤–∫–∏ ---
    st.title(':red[–ù–µ]–ù–°–ò ver. 0.3')
    st.header('–ü–æ–∏—Å–∫ —É–∑–ª–∞ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é üîç')

    # --- –ü–µ—Ä–≤—ã–π –±–ª–æ–∫ –ø–æ–∏—Å–∫–∞ ---
    query = st.text_input('''–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ
                        –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –Ω–∏–∂–µ''')

    if not query:
        st.write('')
    else:
        with open('query_log.txt', 'a', encoding='utf-8') as file:
            file.write(f"Username: {loginlog_username} has looked: {query} at {formatted_time}\n")
        response = request_(query)
        st.subheader('–ù–µ—Ç–æ—á–Ω—ã–π –ø–æ–∏—Å–∫', divider='red')
        if response.status_code == 200:
            st.dataframe(pd.DataFrame(response.json()))
        else:
            print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö:', response.status_code)

    # --- –í—Ç–æ—Ä–æ–π –±–ª–æ–∫ –ø–æ–∏—Å–∫–∞ ---
    st.header('–ü–æ–∏—Å–∫ —É–∑–ª–∞ –ø–æ —Å–ø–∏—Å–∫—É üîç')
    uploaded_file = st.file_uploader("–î–æ–±–∞–≤—å—Ç–µ Excel —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ .xlsx", type=["xls", "xlsx"])
    if uploaded_file is not None:
        allowed_extensions = ['.xls', '.xlsx']
        if '.' + uploaded_file.name.split('.')[-1] not in allowed_extensions:
            st.error('–û—à–∏–±–∫–∞: –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–∞—Ö xls –∏–ª–∏ xlsx.')
        else:
            #st.write("Filename: ", uploaded_file.name)
            file = pd.read_excel(uploaded_file)
            list_cols = file[file.columns[0]].values.tolist()
            tab_variables = [st.empty() for _ in range(len(file[file.columns[0]]))]
            tab_variables = st.tabs(list_cols)
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
            progress_bar = st.progress(0)
            # –∑–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü –ø–æ –∑–∞–ø—Ä–æ—Å–∞–º –∫ API
            for idx, value in enumerate(file[file.columns[0]].values):
                with tab_variables[idx]:
                    st.write(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ—Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –¥–ª—è: {value}")
                    resposne_str = request_(value)
                    if resposne_str.status_code == 200:
                        st.dataframe(pd.DataFrame(resposne_str.json()))
                    else:
                        print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö:', resposne_str.status_code)

                progress_bar.progress((idx + 1) / len(list_cols))
elif st.session_state["authentication_status"] is False:
    st.error('–õ–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ –≤–µ—Ä–Ω—ã, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
elif st.session_state["authentication_status"] is None:
    st.warning('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω –±–µ–∑ @rushydro.ru –∏ –ø–∞—Ä–æ–ª—å abc123')
    